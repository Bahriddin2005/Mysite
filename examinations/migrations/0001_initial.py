# Generated by Django 4.2.16 on 2025-10-09 06:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="CSS icon class", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff", help_text="Hex color code", max_length=7
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "examinations_category",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("description", models.TextField()),
                (
                    "test_type",
                    models.CharField(
                        choices=[
                            ("one_time", "One Time"),
                            ("repeatable", "Repeatable"),
                            ("practice", "Practice Mode"),
                        ],
                        default="one_time",
                        max_length=20,
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "grade_level",
                    models.CharField(
                        blank=True, help_text="Target grade level", max_length=20
                    ),
                ),
                (
                    "time_limit",
                    models.PositiveIntegerField(
                        help_text="Time limit in minutes",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("max_score", models.PositiveIntegerField(default=100)),
                (
                    "pass_mark",
                    models.PositiveIntegerField(help_text="Minimum score to pass"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("requires_approval", models.BooleanField(default=False)),
                (
                    "max_attempts",
                    models.PositiveIntegerField(
                        default=1, help_text="Maximum attempts per user"
                    ),
                ),
                ("show_results_immediately", models.BooleanField(default=True)),
                ("show_correct_answers", models.BooleanField(default=True)),
                ("randomize_questions", models.BooleanField(default=True)),
                ("randomize_choices", models.BooleanField(default=True)),
                ("monitor_browser_focus", models.BooleanField(default=True)),
                ("disable_copy_paste", models.BooleanField(default=True)),
                ("full_screen_mode", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("total_attempts", models.PositiveIntegerField(default=0)),
                ("average_score", models.FloatField(default=0.0)),
                ("pass_rate", models.FloatField(default=0.0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="examinations.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Test",
                "verbose_name_plural": "Tests",
                "db_table": "examinations_test",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TestAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "time_spent",
                    models.PositiveIntegerField(
                        default=0, help_text="Time spent in seconds"
                    ),
                ),
                ("total_score", models.FloatField(default=0.0)),
                ("percentage_score", models.FloatField(default=0.0)),
                ("max_possible_score", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                            ("timeout", "Timed Out"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                ("is_passed", models.BooleanField(default=False)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("focus_lost_count", models.PositiveIntegerField(default=0)),
                ("suspicious_activity", models.JSONField(blank=True, default=dict)),
                ("current_question_index", models.PositiveIntegerField(default=0)),
                ("answers_data", models.JSONField(blank=True, default=dict)),
                ("auto_graded_at", models.DateTimeField(blank=True, null=True)),
                ("manually_graded_at", models.DateTimeField(blank=True, null=True)),
                ("instructor_feedback", models.TextField(blank=True)),
                (
                    "graded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="graded_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="examinations.test",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Test Attempt",
                "verbose_name_plural": "Test Attempts",
                "db_table": "examinations_testattempt",
                "ordering": ["-started_at"],
                "unique_together": {("test", "user", "started_at")},
            },
        ),
        migrations.CreateModel(
            name="TestSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("current_question", models.PositiveIntegerField(default=0)),
                ("time_remaining", models.PositiveIntegerField(default=0)),
                ("answers_buffer", models.JSONField(default=dict)),
                ("window_focus", models.BooleanField(default=True)),
                ("full_screen", models.BooleanField(default=True)),
                ("last_heartbeat", models.DateTimeField(auto_now=True)),
                (
                    "attempt",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session",
                        to="examinations.testattempt",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test Session",
                "verbose_name_plural": "Test Sessions",
                "db_table": "examinations_testsession",
            },
        ),
    ]
